name: Docker Release

on:
  workflow_dispatch:
    branches: ["master"]
    inputs:
      tag:
        description: tag/version to release
        required: true

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Set up Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Run pre release script
        id: preRelease
        run: |
          # export GPG_TTY=$(tty)
          export MY_POM_VERSION=`mvn -q -Dexec.executable="echo" -Dexec.args='${projects.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec`
          if [[ $MY_POM_VERSION =~ ^.*SNAPSHOT$ ]];
          then
            echo "not releasing snapshot version: " ${MY_POM_VERSION}
            echo "RELEASE_OK=no" >> $GITHUB_ENV
          else
            . ./CI/pre-release.sh
            echo "RELEASE_OK=yes" >> $GITHUB_ENV
          fi
          echo "SC_VERSION=$SC_VERSION" >> $GITHUB_ENV
          echo "SC_NEXT_VERSION=$SC_NEXT_VERSION" >> $GITHUB_ENV
          echo "SC_LAST_RELEASE=$SC_LAST_RELEASE" >> $GITHUB_ENV
      - name: docker login
        run: |
          docker login --username=${{ secrets.DOCKERHUB_SB_USERNAME }} --password=${{ secrets.DOCKERHUB_SB_PASSWORD }}
          set -e
      - name: Build generator image and push
        if: env.RELEASE_OK == 'yes'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          provenance: false
          tags: swaggerapi/petstore3:${{ env.TAG }}
      - name: Build generator image and push
        if: env.RELEASE_OK == 'yes'
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile-telemetry
          context: .
          push: true
          platforms: linux/amd64
          provenance: false
          tags: swaggerapi/petstore3:${{ env.TAG }}-telemetry
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SC_VERSION:
      SC_NEXT_VERSION:
      TAG: ${{ github.event.inputs.tag }}

